<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RequestDAO">
	
	<resultMap type="com.pitcrew.cleanhome.admin.request.model.dto.RequestDTO" id="requestResultMap">
		<id property="reqNo" column="REQ_NO"/>
		<result property="serviceDate" column="REQ_DATE"/>
		<result property="wantThing" column="REQ_REQ"/>
		<result property="status" column="REQ_STATUS"/>
		<association property="cleaner" resultMap="memberMapForCleaner"/>
		<association property="user" resultMap="memberMapForUser"/>
		<collection property="pay" resultMap="payResultMap"/>	
			
		<collection property="product" ofType="com.pitcrew.cleanhome.admin.product.model.dto.ProductInfoDTO">
			<id property="productNo" column="SER_NO"/>
			<result property="productName" column="SER_NAME"/>
		</collection>
		
		<collection property="reqStatusHistory" ofType="com.pitcrew.cleanhome.admin.request.model.dto.ReqInfoDTO">
			<id property="reqInfoNo" column="REQ_CON_NO"/>
			<result property="reqNo" column="REQ_NO"/>
			<result property="status" column="REQ_CON"/>
			<result property="date" column="REQ_DATE"/>
		</collection> 
		
	</resultMap>
	
	<resultMap type="com.pitcrew.cleanhome.admin.member.model.dto.MemberDTO" id="memberMapForCleaner">
		<id property="memNo" column="MEM_NO"/>
		<result property="name" column="CLEANER_NAME"/>
		<result property="id" column="MEM_ID"/>
		<result property="address" column="ADDRESS"/>
		<result property="phone" column="PHONE"/>
		<result property="role" column="MEMBER_ROLE"/>
	</resultMap>
	
	<resultMap type="com.pitcrew.cleanhome.admin.member.model.dto.MemberDTO" id="memberMapForUser">
		<id property="memNo" column="MEM_NO"/>
		<result property="name" column="USER_NAME"/>
		<result property="id" column="MEM_ID"/>
		<result property="address" column="ADDRESS"/>
		<result property="phone" column="PHONE"/>
		<result property="role" column="MEMBER_ROLE"/>
	</resultMap>

	<resultMap type="com.pitcrew.cleanhome.admin.pay.model.dto.PayDTO" id="payResultMap">
		<id property="payNo" column="PAY_NO"/>
		<result property="card" column="PAY_CARD"/>
		<result property="price" column="PAY_PRICE"/>
		<result property="payDate" column="PAY_DATE"/>
		<result property="approvedNo" column="PAY_APPROVAL_NO"/>
		<result property="reqNo" column="REQ_NO"/>
	</resultMap>

	<select id="selectAllCount" resultType="_int" parameterType="hashmap">
        SELECT /* */
               COUNT(*)
          FROM REQUEST_INFO A
    	<if test="searchCondition == 'product'">
    	  JOIN PRODUCT_BY_REQ B ON(A.REQ_NO = B.REQ_NO)
	      JOIN PRODUCT_INFO C ON(B.SER_NO = C.SER_NO)
    	</if>
    	<if test="searchCondition == 'user'">
	      JOIN MEMBER B ON(A.MEM_NO_USER = B.MEM_NO)
    	</if>
    	<if test="searchCondition == 'cleaner'">
	      JOIN MEMBER B ON(A.MEM_NO_CLEANER = B.MEM_NO)
    	</if>
    	<where>
			<if test="searchCondition=='reqNo'">
	           A.REQ_NO = #{ searchValue }
			</if>
			<if test="searchCondition == 'product'">
	           C.SER_NAME LIKE '%' || #{ searchValue } || '%' 	
			</if>
		  	<if test="searchCondition == 'user'">
		           B.MEM_NAME = #{ searchValue }
		       AND B.MEMBER_ROLE = '사용자' 	
			</if>
			<if test="searchCondition == 'cleaner'">
		           B.MEM_NAME = #{ searchValue } 
		       AND B.MEMBER_ROLE = '해결사' 	
			</if>
			<if test='(searchStartDate != null and !"".equals(searchStartDate)) 
								or (searchEndDate != null and !"".equals(searchEndDate)) '>
		       	  A.REQ_DATE BETWEEN TO_DATE(#{ searchStartDate }, 'YYYY-MM-DD')
    						 AND TO_DATE(#{ searchEndDate }, 'YYYY-MM-DD') + 1             
			</if>
			<if test="searchStatusValue != null and !''.equals(searchStatusValue)">
				   A.REQ_STATUS LIKE '%' || #{ searchStatusValue } || '%' 	
			</if>
    	</where>
	</select>
	
	<select id="selectReqList" resultMap="requestResultMap">
         SELECT
         	  A.RNUM 
            , A.REQ_NO
	        , A.REQ_DATE
	        , A.REQ_REQ
	        , H.SER_NAME
	        , A.REQ_STATUS
	        , A.USER_NAME
	        , A.CLEANER_NAME
	        , A.PAY_DATE
         FROM (SELECT  ROWNUM RNUM
                     , B.REQ_NO
	            	 , B.REQ_DATE
	            	 , B.REQ_REQ
	            	 , B.CLEANER_NAME
	            	 , B.USER_NAME
	            	 , B.REQ_STATUS
	              	 , B.PAY_DATE 
                  FROM (SELECT C.REQ_NO
	            	 		 , C.REQ_DATE
	            	 		 , C.REQ_REQ
	            	 		 , (SELECT MEM_NAME FROM MEMBER D1 WHERE C.MEM_NO_CLEANER = D1.MEM_NO) AS CLEANER_NAME
	            	 		 , (SELECT MEM_NAME FROM MEMBER D2 WHERE C.MEM_NO_USER = D2.MEM_NO) AS USER_NAME
	            	 		 , C.REQ_STATUS
	            	 		 , F.PAY_DATE
                          FROM REQUEST_INFO C
    					  JOIN MEMBER D ON(C.MEM_NO_USER = D.MEM_NO)
                          JOIN MEMBER E ON(C.MEM_NO_CLEANER = E.MEM_NO)
    					  JOIN PAY_HISTORY F ON(F.REQ_NO = C.REQ_NO)
    	  				  JOIN PRODUCT_BY_REQ G ON(G.REQ_NO = C.REQ_NO)
	      				  JOIN PRODUCT_INFO H ON(H.SER_NO = G.SER_NO)
    					  <where> 
							<if test="searchCondition == 'product'">
					           G.SER_NAME LIKE '%' || #{ searchValue } || '%'
							</if>
						  	<if test="searchCondition == 'user'">
						        D.MEM_NAME = #{ searchValue }  	
						    AND D.MEMBER_ROLE = '사용자'
							</if>
							<if test="searchCondition == 'cleaner'">
						       	 E.MEM_NAME = #{ searchValue }  
						     AND E.MEMBER_ROLE = '해결사'   	
							</if>
							<if test='(searchStartDate != null and !"".equals(searchStartDate)) 
								or (searchEndDate != null and !"".equals(searchEndDate))'>
							
					           	  C.REQ_DATE BETWEEN TO_DATE(#{ searchStartDate }, 'YYYY-MM-DD')
				         						 AND TO_DATE(#{ searchEndDate }, 'YYYY-MM-DD') + 1      
				            </if>
							<if test="searchStatusValue != null and !''.equals(searchStatusValue)">
					           C.REQ_STATUS LIKE '%' || #{ searchStatusValue } || '%' 	
							</if>
				    	  </where>
    					  ORDER BY F.PAY_DATE DESC
    					  ) B
                        <![CDATA[
                  WHERE ROWNUM <= #{ endRow }
                  ]]>
               ) A
          JOIN PRODUCT_BY_REQ G ON(G.REQ_NO = A.REQ_NO)
	      JOIN PRODUCT_INFO H ON(H.SER_NO = G.SER_NO)         
         WHERE A.RNUM >= #{ startRow }     
	</select>

	<select id="selectReqHistory" resultMap="requestResultMap">
	 SELECT /**/
	        A.REQ_NO
	      , A.REQ_DATE
	      , A.REQ_REQ
	      , A.MEM_NO_CLEANER
	      , A.MEM_NO_USER
	      , B.REQ_CON_NO
          , F.SER_NAME
          , D.PAY_DATE
       FROM REQUEST_INFO A
       JOIN REQ_INFO B ON (B.REQ_NO = A.REQ_NO)
       JOIN MEMBER C ON(A.MEM_NO_USER = C.MEM_NO)
       JOIN PAY_HISTORY D ON(D.REQ_NO = A.REQ_NO)
	   JOIN PRODUCT_BY_REQ E ON(E.REQ_NO = A.REQ_NO)
       LEFT JOIN PRODUCT_INFO F ON (F.SER_NO = E.SER_NO)
      WHERE A.REQ_NO = #{ reqNo }	
	</select>



















</mapper>