<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RequestDAO">
	<resultMap type="com.pitcrew.cleanhome.cleaner.request.model.dto.RequestDTO" id="RequestResultMap">
		<id property="reqNo" column="REQ_NO"/>
		<result property="reqDate" column="REQ_DATE"/>
		<result property="reqReq" column="REQ_REQ"/>
		<result property="memNoCleaner" column="MEM_NO_CLEANER"/>
		<result property="memNoUser" column="MEM_NO_USER"/>
		<result property="reqStatus" column="REQ_STATUS"/>
		
		<association property="address" resultMap="memberResultMap"/>
		<association property="memName" resultMap="memberResultMap"/>
		<association property="phone" resultMap="memberResultMap"/>
		<association property="role" resultMap="memberResultMap"/>
		
		<collection property="productList" resultMap="productResultMap"/>	
	</resultMap>
	
	<resultMap type="com.pitcrew.cleanhome.member.model.dto.MemberDTO" id="memberResultMap">
		<id property="memNo" column="MEM_NO"/>
		<result property="id" column="MEM_ID"/>
		<result property="pwd" column="MEM_PWD"/>
		<result property="memName" column="MEM_NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="address" column="ADDRESS"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="role" column="MEMBER_ROLE"/>
		<result property="birth" column="BIRTH"/>
		<result property="entYn" column="ENT_YN"/>
		<result property="entDate" column="ENT_DATE"/>
	</resultMap>
	
	<resultMap type="com.pitcrew.cleanhome.cleaner.request.model.dto.ProductDTO" id="productResultMap">
		<id property="serNo" column="SER_NO"/>
		<result property="serName" column="SER_NAME"/>
		<result property="serContent" column="SER_CONTENT"/>
		<result property="serTime" column="SER_TIME"/>
		<result property="precSerNo" column="PREC_SER_NO"/>
		<result property="serPrice" column="SER_PRICE"/>
	</resultMap>
	
	<select id="selectTotalCount" resultType="_int" parameterType="hashmap">
        SELECT 
               COUNT(*)
          FROM REQUEST_INFO A
		  
	</select>
	
	<select id="selectRequestList" resultMap="RequestResultMap">
	       SELECT
         	  A.RNUM 
            , A.REQ_NO
	        , A.REQ_DATE
	        , A.REQ_REQ
	        , A.MEM_NO_CLEANER
	        , A.MEM_NO_USER
	        , A.REQ_STATUS
	        , A.ADDRESS 
	        , F.SER_NAME
	        , F.SER_TIME
	        , F.SER_PRICE 
         FROM (SELECT  ROWNUM RNUM
                     , B.REQ_NO
	            	 , B.REQ_DATE
	            	 , B.REQ_REQ
	            	 , B.MEM_NO_CLEANER
	            	 , B.MEM_NO_USER
	            	 , B.REQ_STATUS
	            	 , B.ADDRESS
                  FROM (SELECT C.REQ_NO
	            	 		 , C.REQ_DATE
	            	 		 , C.REQ_REQ
	            	 		 , C.MEM_NO_CLEANER
	            	 		 , C.MEM_NO_USER
	            	 		 , C.REQ_STATUS
	            	 		 , D.ADDRESS
                          FROM REQUEST_INFO C
    					  JOIN MEMBER D ON(C.MEM_NO_USER = D.MEM_NO)
    					 <where>
							<if test='searchDate != null and !"".equals(searchDate)'>
							<![CDATA[
	           				  C.REQ_DATE >= TO_DATE(#{ searchDate }, 'YYYY-MM-DD HH24:MI:SS')
                          AND C.REQ_DATE < TO_DATE(#{ searchDate }, 'YYYY-MM-DD HH24:MI:SS') + 1 
                          
                              ]]>
							</if>
							<if test='searchValue != null and !"".equals(searchValue)'>
	           				AND D.ADDRESS LIKE '%' || #{ searchValue } || '%'	
							</if>
						   AND C.REQ_STATUS = '등록'
    					</where>
                         ORDER BY C.REQ_DATE DESC
                        ) B
                  <![CDATA[
                  WHERE ROWNUM <= #{ endRow }
                  ]]>
               ) A
          JOIN PRODUCT_BY_REQ E ON(E.REQ_NO = A.REQ_NO)
	      JOIN PRODUCT_INFO F ON(F.SER_NO = E.SER_NO)
         WHERE A.RNUM >= #{ startRow } 
	</select>
	
	<update id="acceptRequest">
	    UPDATE
	           REQUEST_INFO A
	       SET A.REQ_STATUS = '매칭'
	         , A.MEM_NO_CLEANER = #{ memNoCleaner }
	     WHERE A.REQ_NO = #{ reqNo }
	</update>
	
	<select id="selectRequestDetail" resultMap="RequestResultMap">
		SELECT 
              A.REQ_NO
	        , A.REQ_DATE
	        , A.REQ_REQ
	        , A.MEM_NO_CLEANER
	        , A.MEM_NO_USER
	        , A.REQ_STATUS
	        , B.ADDRESS
	        , B.PHONE
	        , D.SER_NAME
	        , D.SER_TIME
	        , D.SER_PRICE
	     FROM REQUEST_INFO A
	     JOIN MEMBER B ON(A.MEM_NO_USER = B.MEM_NO)
	     JOIN PRODUCT_BY_REQ C ON(C.REQ_NO = A.REQ_NO)
	     JOIN PRODUCT_INFO D ON(D.SER_NO = C.SER_NO)	   
	    WHERE A.REQ_STATUS = #{ reqStatus }
	      AND A.REQ_NO = #{ reqNo }
	</select>
	
	<select id="selectRequestStatus" resultType="string">
	    SELECT
	           A.REQ_STATUS
	      FROM REQUEST_INFO A
	     WHERE A.REQ_NO = #{ reqNo }
	</select>
	
	<insert id="insertRequestStatusHistory">
	    INSERT
	      INTO REQ_INFO A
	    (
	      A.REQ_NO
	    , A.REQ_CON
	    , A.REQ_CON_NO
	    )
		VALUES
		(
		  #{ reqNo }
		, #{ reqStatus }
		, SEQ_REQ_INFO.NEXTVAL
		)
	</insert>
	
</mapper>